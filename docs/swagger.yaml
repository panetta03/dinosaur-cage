definitions:
  controllers.CreateCageRequest:
    properties:
      max_capacity:
        example: 100
        type: integer
      name:
        example: Cage A
        type: string
      power_status:
        allOf:
        - $ref: '#/definitions/controllers.PowerStatus'
        example: ACTIVE
    required:
    - max_capacity
    - name
    - power_status
    type: object
  controllers.CreateDinosaurRequest:
    properties:
      name:
        example: Dino
        type: string
      species:
        example: Tyrannosaurus
        type: string
    required:
    - name
    - species
    type: object
  controllers.PowerStatus:
    enum:
    - ACTIVE
    - DOWN
    type: string
    x-enum-varnames:
    - PowerStatusActive
    - PowerStatusDown
  models.Cage:
    properties:
      current_capacity:
        type: integer
      current_dinosaurs:
        items:
          $ref: '#/definitions/models.Dinosaur'
        type: array
      id:
        type: integer
      max_capacity:
        type: integer
      name:
        type: string
      power_status:
        $ref: '#/definitions/models.PowerStatus'
    type: object
  models.Diet:
    enum:
    - carnivore
    - herbivore
    type: string
    x-enum-varnames:
    - Carnivore
    - Herbivore
  models.Dinosaur:
    properties:
      cage_id:
        type: integer
      diet:
        $ref: '#/definitions/models.Diet'
      id:
        type: integer
      name:
        type: string
      species:
        type: string
    type: object
  models.PowerStatus:
    enum:
    - DOWN
    - ACTIVE
    - DOWN
    type: string
    x-enum-varnames:
    - DefaultPowerStatus
    - PowerStatusActive
    - PowerStatusDown
info:
  contact: {}
paths:
  /cages:
    post:
      consumes:
      - application/json
      description: Create a new cage in the database.
      operationId: create-cage
      parameters:
      - description: New Cage object
        in: body
        name: cage
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateCageRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Cage'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Create a new cage.
  /cages/{cage_id}/dinosaurs/{dinosaur_id}:
    post:
      consumes:
      - application/json
      description: Add a dinosaur to a cage with specific checks.
      operationId: add-dinosaur-to-cage
      parameters:
      - description: Cage ID
        in: path
        name: cage_id
        required: true
        type: integer
      - description: Dinosaur ID
        in: path
        name: dinosaur_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Updated cage
          schema:
            $ref: '#/definitions/models.Cage'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Add a dinosaur to a cage.
  /cages/{id}:
    get:
      description: Retrieve a specific cage based on its ID.
      operationId: get-cage-by-id
      parameters:
      - description: Cage ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Cage'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Cage not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get a specific cage by ID
    put:
      consumes:
      - application/json
      description: Update an existing cage in the database.
      operationId: update-cage
      parameters:
      - description: Cage ID to update
        in: path
        name: id
        required: true
        type: integer
      - description: Updated Cage object
        in: body
        name: cage
        required: true
        schema:
          $ref: '#/definitions/models.Cage'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Cage'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Cage Not Found
          schema:
            type: string
      summary: Update an existing cage
  /dinosaurs:
    post:
      consumes:
      - application/json
      description: Create a new dinosaur
      operationId: create-dinosaur
      parameters:
      - description: Dinosaur object
        in: body
        name: dinosaur
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateDinosaurRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Dinosaur'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create a dinosaur
  /dinosaurs/{id}:
    get:
      description: Get a dinosaur's details by its ID
      operationId: get-dinosaur
      parameters:
      - description: Dinosaur ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Dinosaur'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get a dinosaur by ID
swagger: "2.0"
